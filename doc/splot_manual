********************************
* SPLOT PACKAGE	*
********************************
CHANGE HISTORY:
===============
HNG, Jun 08,2021; HNG, Jan 13,2015; HNG, Apr 22,2010; 

DEVELOPER
=========
Hom Nath Gharti (HNG)
Princeton University
Volker Oye (VO)
Michael Roth (MR)
NORSAR, Norway

TODO
====
- delete unused source files

BACKGROUND
========== 

This package plots various types of seimograms and DE location results obtained by using
migloc3d package (Gharti et al 2010). For the publication quality figures we use the savefigure package developed 
by Aslak Grinsted (http://www.mathworks.com/matlabcentral/fileexchange/6854). Data sources 
for this program can be of several types: 1) Synthetic data (binary SAC files) computed using 3d viscoelastic 
finite difference code E3D (Larsen and Grieger, 1998), 2) Synthetic data computed using 
SPECFEM3D (Komatitsch and Tromp, 1998), 3) MAT file processed with microseismic monitoring 
package MIMO (Oye and Roth, 2003), 4) SEG2 files, 5) SEGY files, and 6) MAT file containing 
DE result of migloc3d . If you want to process other types of data, you can look at the file 
load_data.m and add/modify as necessary. This program 
can use either a homogeneous model to compute the arrival times or the arrival-time lookup tables 
computed by 3d finite difference eikonal solver (Podvin and Lecomte, 1991) if onsets plotting option is chosen. 

PACKAGE STRUCTURE
=================
- splot
	- doc
	- src
	- savefigure
splot	: this is the parent directory and contains all necessary files/folders
doc	: contains documentations files
src	: contains all source files and folders
savefigure: contains all savefigure files (this is no longer necessary for this package, but it is necessary for plot_migloc3d)
 
CONVENTION
==========
Units
-----
Input	: All length units (m) and all time units (s)
Process	: All length units (m) and all time units (s)
Output	: All length units (m) and all time units (s)

Sign convention
---------------
Input   -> x: East, y: North, z: Down
Process -> x: East, y: North, z: Up

USAGE
=====
- prepare an appropriate input file as described in INPUT section below (you can put in any suitable location). 
- open a matlab session and go to the path splot/src.
- run the command: run_splot(inputfilename) 
- e.g. run_splot('../input/test.in')


INPUT FILE
==========
Format of input file is designed similar to that of migloc3d input file. Input file can consist of blank lines, comment lines and legitimate input lines.
	
Blank lines are just blank lines with no non-white-space characters. Comment lines are those lines which have '#' as a first character not neccesarily in the first column. Any number of blank lines or comment lines can be placed in the input files for user friendly input structure.

Legitimate input lines are those required for program execution. These lines consist of line type and list of arguments and corresponding values. All argument-value pair are separated by comma (,). If necessay, any legitimate input line can be continued to next line using '&' as an absolute last character of a line to be continued.

Legitimate input lines have the format
<line types> <arg1=val1>, <arg2=val2>, ......., <argn=valn>
for example:
model: dh=2, ox=[0; 0; 0], nx=[312; 312; 312], lookup=1, &
pheader=../../fdtimes/output/py_3d_lookup_p_arrival_time_source-receiver, &
sheader=../../fdtimes/output/py_3d_lookup_s_arrival_time_source-receiver 

All legitimate input lines should be written in lower case. Line type and argument-valu pairs must be separated by space. Each argument-value pair must be separated by comma(,) and space/s. No space/s are recommended before line type and in between argument name and '=' or '=' and argument value. If argument value is string/character just write the normal string.

LINE TYPES
----------
Only the following line types are recognized.
 
preinfo : preinformation
model	: model parameters
rdata	: receiver data parameters
process	: process parameters 
seisplot: options to plot seismograms
deplot	: option to plot DE results 
model	: model parameters. this is necessary only if we want to plot rotated traces/envelopes or onsets
 
ARGUMENTS
---------
Only the following arguments under each line types are recognized. All vectors or matrices must follow the matlab convention. For example, 
write a vector 
0
0
0
as [0; 0; 0]
and write a matrix
0 600
0 600
0 600
-1 1
as [0 600; 0 600; 0 600; -1 1] .

preinfo
	type	: type of plot [integer 0 or 1]
        	0 -> seismograms
		1 -> DE results
	plot	: switch to plot the figures [intger 0 or 1]
		0 -> off
		1 -> on
	save	: switch to save figure [integer 0 or 1]
		0 -> off
		1 -> on
	if save=1 define following parameters
		figform : figue format [string from eps, jpeg, pdf, png, ps]
		figres	: resolution of figure in DPI [integer] e.g., 300 or 600
		fighead : header for figure location and name [string] e.g., ../output/test. all figure 
			files will have header test in their name and will be located in ../output/ directory.
	
rdata
	type: type of data source [integer from 0 to 4]
		0 -> sac files computed using 3d viscoelastic finite difference code E3D		
		1 -> .mat file processed by Microseismic Monitoring system (MIMO). Note: Z-coordinates should be positive Up convention.
        	2 -> SEG2 data file
        	3 -> SPECFEM3D data file
        	32 -> SPECFEM3D data file: difference between two data sets of identical recever lines. 
              	If the numbers of samples are different, the least value will be chosen. 
              	Time vectors upto that point must be identical.
		4 -> SEGY file

	fheader: file name header (excluding counter and extension) of sac files [string] necessary only if type=0 or 3
		e.g., for a file name py_3d_strike0_f250.01.y use only py_3d_strike0_f250. If the data files are from 
        SPECFEM3D fheader is just the path (e.g, /space/homnath/research/SPECFEM3D_SESAME/OUTPUT_FILES_aaknes/)
        where the data are stored. File names are determined from the STATION file to be defined below as a variable "sfile".
    fheader1: same as fheader for second set of data [string] necessary only if type=32
	mfile: .mat file name [string] necessary only if type=1
    	seg2file: SEG2 ata file [string] necessary only if type=2
	segyfile: SEGY file [string] necessary only if type=4
    	sfile: SPECFEM3D station file [string] necessary only if type =3
   
	rfile: receiver file containing receivers coordinates [string] necessary only if type=0, optional if type=1
	nrec : total number of receivers [non-negative integer], necessary only if type=0, optional otherwise
    	ext  : extension of data file to process [string] necessary only if type=3. in SPECFEM3D several files are produced with 
           the extension .semd, .semv, .sema for displacement, velocity, and acceleration respectively. Therefore we need to select the
           appropriate exension, e.g, ext=semv if we want to process velcoity seismograms.

process
	select: option for selecting receivers to process [integer from 0 to 4, and -4] => default 0
		0 -> process all receivers		
		1 -> process only the receivers given by the indicial selection
		2 -> process only the receivers which are within the circular region from a reference point
		3 -> process only the receivers which are listed in a ascii file
        	4 -> process only the receiver which are greaer or equal to the reference receiver
        	-4 -> process only the receiver which are smaller or equal to the reference receiver
    	if select=1 also define the following parameters: 
    	   	r1	: first index for the receiver selection [non-negative integer]
        	rstep: step value for the receiver selection [non-negative integer]
        	r2	: final index for the receiver selection [non-negative integer]
    	if select=2 also define the following parameters:
        	refx: reference point coordinates for receiver selection [real, 3d-vector]
        	rad	: radius from the reference point for receiver selection [real]
    	if select=3 also define the following parameters:
        	rnfile: receiver numbers file containing list of receiver numbers to process [string] necessary only if select=3
    	if select=4 also define the following parameter
        	refrec: reference receiver number [non-negative integer]
    	if select=-4 also define the following parameter
        	refrec: reference receiver number [non-negative integer]
    		xrec: option for selecting receivers to discard [integer from 0 to 4, and -4] => default 0
		0 -> discard all receivers		
		1 -> discard only the receivers given by the indicial selection
		2 -> discard only the receivers which are within the circular region from a reference point
		3 -> discard only the receivers which are listed in a ascii file
        	4 -> discard only the receiver which are greaer or equal to the reference receiver
        	-4 -> discard only the receiver which are smaller or equal to the reference receiver
    	if xrec=1 also define the following parameters: 
        	xr1	: first index for the receiver selection [non-negative integer]
        	xrstep: step value for the receiver selection [non-negative integer]
        	xr2	: final index for the receiver selection [non-negative integer]
    	if xrec=2 also define the following parameters:
        	xrefx: reference point coordinates for receiver selection [real, 3d-vector]
        	xrad	: radius from the reference point for receiver selection [real]
    	if xrec=3 also define the following parameters:
        	xrnfile: receiver numbers file containing list of receiver numbers to process [string] necessary only if select=3
    	if xrec=4 also define the following parameter
        	xrefrec: reference receiver number [non-negative integer]
    	if xrec=-4 also define the following parameter
        	xrefrec: reference receiver number [non-negative integer]
		comp: components to process [string pointer] => default ENZ
		E -> East component
		N -> North component
		Z -> vertical component
		You can choose any combination of above letters e.g. E, EN, ENZ, and NZ will process only East components, only East and North components, all components, and only North and vertical components respectively.
	tclip: clipping time of seismogram sections [s, positive real, 2d-vector] => default [0 09
		clipping will be dome only for non-zero value, e.g., [0 0], [1 0], [0 2] and [1 2] will clip nothing, clip the section only before 1s, clip the section only after 2s, and clip the sections before 1s and after 2s respectively.
	noise: percentage of white noise percentage to be added to all sesmograms [real] => default 0
	ffreq: filtering frequency [Hz, real, 2d-vector] filtering is active only if max(freq)>0. => default [0 0]
	ftype: filter type [integer from 1, 2 and 3] necessary only if max(ffreq)>0
		1 -> low pass
		2 -> band pass
		3 -> high pass
	forder: order of butterworth [positive integer] normally we use 3

seisplot 
	type: type of seismogram plot [integer from 0 to 5]		
		0 -> plot original trace		
		1 -> plot rotated trace. parameter "model" has to be defined later
		2 -> plot envelopes of traces 
        	3 -> plot rotated envelopes "model" has to be defined later
		4 -> plot SNR of seismograms
		5 -> plot polarization information
    	cmap: switch to plot color map of the seismograms [integer 0 or 1] => default 0
        	0 -> off
        	1 -> on
        	if cmap=1, superpose=0. map plot make sense only in individual components!
	norm: normalization fo traces before stacking [integer from 0, 1, 2, 3, and 4] => default 0
		0 -> No normalization
		1 -> Normalize to trace maximum
		2 -> Normalize to geophone maximum
        	3 -> Normalize to absolute maximum
        	4 -> Normalize first to trace mean and to absolute maximum
	amp	: plot amplitude [real]
	clipamp	: clipping amplitude
	superpose: superpose option [integer 0, 1, 3] not necessary if type=5
		0 -> no superpose. each component wll be plotted in a separate figure window.
		1 -> superpose with 3 components in each trace. all components/traces will be plotted in a single window.
		2 -> superpose each component has separate trace. all coponents/traces will be plotted in a single window.
	onset	: switch to plot onsets [integer from 0, 1, 2, 3] no necessary if type=5. if onset>0 "model" has to be defined later. default=> 0
		0 -> off
		1 -> plot only first P onsets
		2 -> plot only first S onsets
		3 -> plot both first P and S onsets
	align	: switch to alignt traces [integer from 0, 1, 2, 3] not necessary if type=5 (need to check the code carefully)
		0 -> off
		1 -> align with respect to first P onsets
		2 -> align with respect to first S onsets
		3 -> smart aligning if type=1 or 3, i.e., align P trace with respect to P, SH and SV trace with respect to S
	area	: switch to draw the filled area within the time window to be defined below [integer from 0, 1, 2, 3]
		0 -> off
		1 -> area for first P onsets
		2 -> area for first S onsets
		3 -> smart switch for type=1 or 3, i.e., draw area of P for P trace, draw area of S for SH and SV traces
	twin	: time window to draw area [real 2d-vector with the values for P time window and S time window]
	rect	: switch to draw the filled rectangle in bakground behind the filled area/onsets [integer from 0 or 1]
		0 -> off
		1 -> on
	if type=4 following parameters have to be defined
		lta	: time window for long term average (LTA) [s, real]
		sta	: time window for short term average (STA) [s, real]
	if type=5 following parameters have to be defined
		twin	: time window [s, real]
		move	: number of samples to move time window for polarization [integer]
		map	: switch to plot polarization map for all traces [integer from 0 or 1]
		azimuth	: switch to plot polarization strength in azimuth vs time plot [integer from 0 or 1]
		if azimuth=1 following parameters can be defined to select receiver to which to plot azimuthal map
			r1	: first receiver number
			rstep	: step length for receiver number
			r2	: last receiver number
	if we need to plot several types of seismograms we can define multiple "seisplot" lines

model
	dh	: grid spacing [m, real]
	ox	: coordinates of origin [m, real, 3d-vector]
	nx	: number of grid points in x, y and z direction [non-negative integer, 3d-vector]
	src	: space coordinates and origin time of a source [m,s, real 3d-vector]
	lookup: lookup table option for travel times [integer from 0, 1 and 2]
		0 -> do not use lookup table, use homogeneous velocity model
		1 -> use lookup table, load during runtime (less memory, slower speed)
		2 -> use lookup table, load at once (large memory, faster speed)
	if lookup=0 following prameters have to be defined
        vp: p wave velocity [m/s, real] necessary only if lookup=0
		vs: s wave velocity [m/s, real] necessary only if lookup=0
	if lookup>0 following parameters have to be defined
		pheader: header for p wave travel times [string]
		sheader: header for s wave travel times [string]

#deplot range=[-802.0 805.0; -1000.0 1000.0; 6500 7000; -0.05 0.06], &
#mfile=../output/total_mig3d_selected_30ft_location_optimization_result.mat, &
#lunit=ft, rtick=[2; 2; 2; -2], ntick=[5; 5; 5; 6], &
#lastpop=1, allpop=1, par_gen=1, par_of=1, par_par=1, gen_of=1, gen_sd=1, anim=1


deplot
	range	: range of plot [real 4X2 matrix with range for x, y, and z in first 3 rows and for origin time in last row] usually
		this is same as that used in migloc3d input
	mfile	: MAT file in which DE results are stored
	lunit	: length unit name to put in figure [string], e.g., m or km or ft
	rtick	: 
	ntick	: number of ticks in each axis [integer 4d-vector]
	lastpop	: switch to plot last generation population [integer from 0 or 1]
		0 -> off
		1 -> on
	allpop	: switch to plot  all population in 3D [integer from 0 or 1]
		0 -> off
		1 -> on 
	par_gen	:
		switch to plot parameter vs generation map [integer from 0 or 1]
		0 -> off
		1 -> on
	par_of	:
		switch to plot parameter vs objective function [integer from 0 or 1]
		0 -> off
		1 -> on
	par_par	:
		switch to plot parameter vs parameter map [integer from 0 or 1]
		0 -> off
		1 -> on
	gen_of	:
		switch to plot generation vs objective function map [integer from 0 or 1]
		0 -> off
		1 -> on
	gen_sd	:
		switch to plot generaion vs standard deviation map [integer from 0 or 1]
		0 -> off
		1 -> on
	anim	:
		switch to plot animation of DE search steps [integer from 0 or 1], this may take long time
		0 -> off
		1 -> on
 	
SOME DETAILS
============
lookup tables
-------------
Lookup tables are stored in binary VTK image data format. Typical format looks like this:

<?xml version="1.0"?>
<VTKFile type="ImageData" version="0.1" byte_order="LittleEndian">
<ImageData WholeExtent="0 311 0 311 0 311" Origin="0.000000 0.000000 0.000000" Spacing="0.002000 0.002000 -0.002000">
<Piece Extent="0 311 0 311 0 311">
<PointData Scalars="Arrival time (s)" >
<DataArray  type="Float32" Name="Arrival time (s)" format="appended" offset="0" />
</PointData>
<CellData >
</CellData>
</Piece>
</ImageData>
<AppendedData encoding="raw">
.....binary data in x changes first order.......
</AppendedData>
</VTKFile>


rdata.rfile (ascii)
-------------------
	This file contains the information of receiver/s in following format:
	First line: 	Comments line, this line is ignored during reading
	Next line: 		Coordinates of the receiver location (x y z)
	...
	...	
	* No extra lines are permitted
	
	Example of receiver file:		
		
	Receivers locations (m): x, y, z
	283.071 437.110 153.280	
	091.980 303.160 183.670	
	267.390 287.600 181.110	
	446.131 245.810 175.410	
	197.351 350.300 355.830	
	420.521 470.080 364.210	
	481.710 261.000 353.280	
	277.340 222.860 376.940

rdata.sfile (ascii)
---------------------
    This file contains the STATION information that has been used in SPECFEM3D.
    each line cotains station name, network name, latitude or y (m), longitute or x (m), elevation (m), and burial or z (m)

    example of STATION file

    S1	NOR	149	438	0.000	66
    S2	NOR	299	404	0.000	152
    S3	NOR	242	397	0.000	137
    S4	NOR	178	404	0.000	103
    S5	NOR	210	360	0.000	166
    S6	NOR	167	354	0.000	152
    S7	NOR	125	350	0.000	133
    S8	NOR	62	410	0.000	57

process.rnfile (ascii)
----------------------
	This file contains one line as a header and the list of receiver numbers to process.
	
	Example file:		
		
	List of receivers numbers
	1
	2
	3
	5
	12
	34
	
Examples input files
--------------------

# Preliminary information
# type: 0: plot seismo, 1: plot de result
preinfo type=0, plot=1, save=0, figform=png, figres=600, fighead=../output/test

# Receivers data information
# 0: e3d computation; 1: MIMO .mat file
#rdata type=2, seg2file=/staff/homnath/research/aaknes/2010/2010_050_63_117209.dat, &
#rdata type=2, seg2file=/staff/homnath/research/aaknes/2010/2010_045_36_116616.dat, &
rdata type=2, seg2file=/staff/homnath/research/aaknes/files/2010_019_63_114349.dat, &
rfile=/staff/homnath/research/aaknes/aaknes_geophones_original, &
rsetfile=/staff/homnath/research/aaknes/aaknes_receiver_setup, nrec=8

# Processing information
# Select receiver option (select - 0: all->'all'; 1: indicial selection-> r1,rstep,r2; 2: Circular selection-> refx,rad; 3: list from file-> rnfile)
# Receiver selection as mentioned above
# norm=(0: no normalization, 1: trace max, 2: geophone max, 3: absolute max, 4: first trace mean and absolute maximum)
process select=3, rnfile=/staff/homnath/research/aaknes/2010/geophones_20100209, comp=ENZ, tclip=[1 4], noise=0, ffreq=[10 200], ftype=2, forder=3

# norm (0: trace maximum, 1: geophone maximum, 2: absolute maximum, 3: trace mean and absolute maximum)
# align=4, area=4 smart choice
# type= (0: trace, 1: rotated trace, 2: envelop, 3: rotated envelop, 4: SNR, 5: polarization)
seisplot type=0, norm=1, amp=15, clipamp=15, superpose=2, onset=3, align=0
#seisplot type=1, norm=1, amp=15, clipamp=15, superpose=0, onset=3, align=0, area=0
#seisplot type=2, norm=1, amp=15, clipamp=15,  superpose=0, onset=3, align=0
seisplot type=3, norm=0, amp=15, clipamp=15,  superpose=0, onset=3, align=4, area=4, twin=[0.12 0.12], rect=1
#seisplot type=4, lta=0.2, sta=0.03, norm=1, amp=15, clipamp=15,  superpose=0, onset=3, align=0, area=0
#seisplot type=5, twin=0.02, move=5, map=1, azimuth=1, r1=40, rstep=1, r2=41

# Model parameters
model dh=2.0, ox=[0; 0; 0], nx=[300; 260; 260], src=[270; 350; 212; 2.2052], lookup=0, vp=3000, vs=1732
#pheader=/data/homnath/fdtimes/output/aaknes_burried_more_lookup_p_arrival_time_source-receiver, &
#sheader=/data/homnath/fdtimes/output/aaknes_burried_more_lookup_s_arrival_time_source-receiver


#deplot range=[-802.0 805.0; -1000.0 1000.0; 6500 7000; -0.05 0.06], &
#mfile=../output/total_mig3d_selected_30ft_location_optimization_result.mat, &
#lunit=ft, rtick=[2; 2; 2; -2], ntick=[5; 5; 5; 6], &
#lastpop=1, allpop=1, par_gen=1, par_of=1, par_par=1, gen_of=1, gen_sd=1, anim=1
	
OUPUT 
=====
- figure file
 


REFERENCES
==========
Gharti, H. N., V. Oye, M. Roth, and D. Kuehn, 2010, Automated microearthquake location using envelope stacking and robust global optimization, Geophysics, 75, MA27-MA46

Larsen, S., and J. Grieger, 1998, Elastic modeling initiative, Part III: 3-D computational modeling: 68th annual meeting, SEG, Expanded abstract, 1803-1806.

Oye V. and M. Roth, 2003, Automated seismic event location for hydrocarbon reservoirs: Computer & Geosciences, 29, 851-863.

Podvin, P., and I. Lecomte, 1991, Finite donly iference computation of traveltimes in very contrasted velocity models: a massively parallel approach and its associated tools: Geophysical Journal International, 105, 271-284.

Price, K. V., R. M. Storn, and J. A. Lampinen, 2005, Donly iferential evolution: a practical approach to global optimization: Springer.

Storn, R., and K., Price, 1997, Donly iferential evolution � a simple and efficient heuristic for global optimization over continuous spaces: Journal of Global Optimization, 11, 341-359.


